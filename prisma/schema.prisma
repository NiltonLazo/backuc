// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Generator
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// MODELO PARA GESTIONAR CORREOS AUTORIZADOS PARA ADMINISTRADORES Y PSICÓLOGOS
model AllowedEmail {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  role      RoleAllowed
  active    Boolean  @default(true)
  creadoEn  DateTime @default(now())
}

enum RoleAllowed {
  psicologo
  administrador
}

// MODELOS DE USUARIOS

model Estudiante {
  id                   Int       @id @default(autoincrement())
  nombre               String
  correo               String    @unique
  telefono             String?
  foto                 String?
  codigo               String?   @unique
  sede                 String?
  ciclo                Int?
  carrera              String?
  modalidad            Modalidad?
  fechaNacimiento      DateTime? @db.Date
  calendarAccessToken  String?   @db.Text
  calendarRefreshToken String?
  calendarTokenExpiry  DateTime?
  creadoEn             DateTime  @default(now())

  // Relaciones
  citas                Cita[]    @relation("CitasEstudiante")
  notificaciones       Notificacion[]
}

model Psicologo {
  id                   Int       @id @default(autoincrement())
  nombre               String
  correo               String    @unique
  telefono             String?
  foto                 String?
  sede                 String?
  calendarAccessToken  String?   @db.Text
  calendarRefreshToken String?
  calendarTokenExpiry  DateTime?
  creadoEn             DateTime  @default(now())

  // Relaciones
  horarios             Horario[]
  bloqueos             BloqueoHorario[]
  citas                Cita[]    @relation("CitasPsicologo")
  // Se eliminó la relación recomendaciones
  notificaciones       Notificacion[]
}

model Administrador {
  id                   Int       @id @default(autoincrement())
  nombre               String
  correo               String    @unique
  telefono             String?
  foto                 String?
  calendarAccessToken  String?   @db.Text
  creadoEn             DateTime  @default(now())

  // Relaciones (según necesites)
  notificaciones       Notificacion[]
}

// OTROS MODELOS

model Horario {
  id          Int       @id @default(autoincrement())
  psicologo   Psicologo @relation(fields: [psicologoId], references: [id])
  psicologoId Int
  dia         DiaSemana
  horaInicio  String
  horaFin     String
  creadoEn    DateTime  @default(now())
}

model BloqueoHorario {
  id          Int       @id @default(autoincrement())
  psicologo   Psicologo @relation(fields: [psicologoId], references: [id])
  psicologoId Int
  fecha       DateTime
  motivo      String?
  creadoEn    DateTime  @default(now())
}

model Cita {
  id               Int         @id @default(autoincrement())
  estudianteId     Int         @map("estudiante_id")
  estudiante       Estudiante  @relation("CitasEstudiante", fields: [estudianteId], references: [id])
  psicologoId      Int         @map("psicologo_id")
  psicologo        Psicologo   @relation("CitasPsicologo", fields: [psicologoId], references: [id])
  motivo           String
  fecha            DateTime    @db.Date  
  hora             String      @db.VarChar(5)
  tipo             TipoCita
  estado           Estado
  meetLink         String? 
  calendarEventId  String?    
  citaPreviaId     Int?
  citaPrevia       Cita?       @relation("CitasSeguimiento", fields: [citaPreviaId], references: [id])
  citasSeguimiento Cita[]      @relation("CitasSeguimiento")
  creadoEn         DateTime    @default(now())

  // Relación 1:1 con HistoriaClinica (información global)
  historiaClinica  HistoriaClinica?

  // Relación 1:1 con AtencionCita (información puntual de atención)
  atencionCita     AtencionCita?

  @@unique([psicologoId, fecha, hora])

  // Se eliminó la relación recomendaciones
  reprogramaciones Reprogramacion[]
  notificaciones   Notificacion[]

  // NUEVO: Relación inversa para la encuesta de satisfacción
  encuesta         Encuesta?
}

model Reprogramacion {
  id         Int      @id @default(autoincrement())
  citaId     Int
  cita       Cita     @relation(fields: [citaId], references: [id])
  nuevaFecha DateTime
  nuevaHora  String
  motivo     String
  creadoEn   DateTime @default(now())
}

model Notificacion {
  id               Int      @id @default(autoincrement())

  estudiante       Estudiante?    @relation(fields: [estudianteId], references: [id])
  estudianteId     Int?

  psicologo        Psicologo?     @relation(fields: [psicologoId], references: [id])
  psicologoId      Int?

  administrador    Administrador? @relation(fields: [administradorId], references: [id])
  administradorId  Int?

  cita             Cita?          @relation(fields: [citaId], references: [id])
  citaId           Int?

  mensaje          String
  tipo             TipoNotificacion
  estado           EstadoNotificacion
  enviadoEn        DateTime?
}

model Reporte {
  id                 Int      @id @default(autoincrement())
  periodo            String   
  totalCitas         Int
  citasAtendidas     Int
  citasCanceladas    Int
  citasReprogramadas Int
  citasVirtuales     Int
  citasPresenciales  Int
  creadoEn           DateTime @default(now())
}

// Tabla para Historia Clínica (registro global)
model HistoriaClinica {
  id              Int      @id @default(autoincrement())
  citaId          Int      @unique
  cita            Cita     @relation(fields: [citaId], references: [id])
  diagnostico     String
  recomendaciones String?  @db.Text
  observaciones   String?  @db.Text
  creadaEn        DateTime @default(now())
}

// Nueva tabla para almacenar los detalles de la atención de la cita
model AtencionCita {
  id                    Int                       @id @default(autoincrement())
  citaId                Int                       @unique
  cita                  Cita                      @relation(fields: [citaId], references: [id])
  // Campos para cuando la cita fue atendida:
  areaDerivacion        AreaDerivacionEnum?
  diagnosticoPresuntivo DiagnosticoPresuntivoEnum?
  medioContacto         MedioContactoEnum?
  recomendaciones       String?                   @db.Text
  // Campo para cuando la cita no fue asistida:
  observaciones         String?                   @db.Text
  followUpRequested     Boolean? 
  creadaEn              DateTime                  @default(now())
  updatedAt             DateTime                  @updatedAt
}

// Tabla para las indicaciones
model Indicacion {
  id       Int      @id @default(autoincrement())
  sede     String   @unique
  mensaje  String
  creadoEn DateTime @default(now())
}

// Tabla de encuestas
model Encuesta {
  id          Int      @id @default(autoincrement())
  citaId      Int      @unique
  cita        Cita     @relation(fields: [citaId], references: [id])
  pregunta1   Int
  pregunta2   Int
  pregunta3   Int
  comentarios String?  @db.Text
  creadoEn    DateTime @default(now())
}

// ENUMS

enum DiaSemana {
  lunes
  martes
  miercoles
  jueves
  viernes
  sabado
  domingo
}

enum Modalidad {
  presencial
  semipresencial
  a_distancia
}

enum Estado {
  pendiente
  atendida
  no_asistio
  cancelada
  reprogramada
}

enum TipoNotificacion {
  recordatorio
  confirmacion
  cancelacion
  otro
}

enum EstadoNotificacion {
  pendiente
  enviado
  leido
}

enum TipoCita {
  virtual
  presencial
}

// Enums para la tabla AtencionCita

enum AreaDerivacionEnum {
  tutoria
  mentoria
  topico
  personal
  CAS
  defensoria_universitaria
  vinculacion_internacional
  docente
  protocolo_de_salud_mental
  servicio_social
}

enum DiagnosticoPresuntivoEnum {
  familiar
  academico
  agresivo_pasivo
  ansiedad
  antisocial
  autoestima
  bipolar
  borderline
  compulsivo_autocontrol
  dependencia_videojuegos_internet
  dependencia_alcohol_drogas
  relacion_afectiva
  depresion
  desorden_alimenticio
  duelo_fallecimiento
  distimia
  esquizoide
  esquizotipico
  estres
  histrionico
  ludopatia
  narcisista
  orientacion_vocacional
  paranoide
  servicio_social
  somatoformo
  trabajo_o_laboral
}

enum MedioContactoEnum {
  boca_a_boca
  protocolo_de_salud_mental
  entrevistas_de_vinculacion
  correo_electronico
  talleres_preventivos
  citas_automatizadas
  onboarding
  app_movil
}